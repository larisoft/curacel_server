
#!upstart
#
# Derived from https://www.exratione.com/2013/02/nodejs-and-forever-as-a-service-simple-upstart-and-init-scripts-for-ubuntu/
# An example upstart script for running HospitalRun as a service
# using Forever as the process monitor. For more configuration options
# associated with Forever, see: https://github.com/nodejitsu/forever
#
# You will need to set the environment variables noted below to conform to
# your use case, and should change the description.
#
description "HospitalRun upstart script using forever"
 
start on filesystem
stop on shutdown
 
# This line is needed so that Upstart reports the pid of the Node.js process
# started by Forever rather than Forever's pid.
expect fork
 
# The following environment variables must be set so as to define where Node.js
# and Forever binaries and the Node.js source code can be found.
#
# The example environment variables below assume that Node.js is installed by
# building from source with the standard settings.
#
# It should be easy enough to adapt to the paths to be appropriate to a package
# installation, but note that the packages available in the default repositories
# are far behind the times. Most users will be  building from source to get a
# more recent Node.js version.#

# Log file path.
# env LOG="/var/log/my-application.log"
# Forever settings to prevent the application spinning if it fails on launch.
env MIN_UPTIME="5000"
env SPIN_SLEEP_TIME="2000"

# The application startup Javascript file path.
env APPLICATION_PATH="/var/app/server/app.js"
# Log file path.
env LOG="/var/app/server/hr.log"
# Stdout log file path.
env OUTLOG="/var/app/server/hrout.log"
# Stderr log file path.
env ERRLOG="/var/app/server/hrerr.log"
 
script
    # Add the node executables to the path, which includes Forever if it is
    # installed globally, which it should be.
    # The minUptime and spinSleepTime settings stop Forever from thrashing if
    # the application fails immediately on launch. This is generally necessary
    # to avoid loading development servers to the point of failure every time
    # someone makes an error in application initialization code, or bringing
    # down production servers the same way if a database or other critical
    # service suddenly becomes inaccessible. 
    chdir /var/app/server
    exec forever \
      -a \
      -l $LOG \
      -o $OUTLOG \
      -e $ERRLOG \
      --minUptime $MIN_UPTIME \
      --spinSleepTime $SPIN_SLEEP_TIME \
      start $APPLICATION_PATH
end script
 
pre-stop script
    # Add the node executables to the path.
    # Here we're using the pre-stop script to stop the Node.js application
    # process so that Forever is given a chance to do its thing and tidy up
    # its data. Note that doing it this way means that each application that
    # runs under Forever must have a different start file name, regardless of
    # which directory it is in.
    exec forever stop $APPLICATION_PATH
end script
